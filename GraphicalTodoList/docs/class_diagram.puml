@startuml
'https://plantuml.com/class-diagram

class TodoListApplication
{
    +static void main(String[] args)
    +void start(Stage stage)
}

+class TodoListApplicationController
{
    -listItemFilterOption selectedFilterOption
    -sortListOption selectedSortOption

    -final Alert emptyItemDescriptionExistsOnAddAlert
    -final Alert emptyItemDescriptionExistsOnSaveListAlert
    -final Alert failedToSaveListAlert
    -final Alert failedToLoadListAlert

    -static final String TEXT_FIELD_ERROR_BORDER_STYLE_NAME

    -TodoList todoList
    -final HashMap<ListItem, TextField> textFields
    -final HashMap<ListItem, CheckBox> checkBoxes
    -final HashMap<ListItem, DatePicker> datePickers
    -final HashMap<ListItem, Button> removeButtons

    -ToggleGroup listFilterOptionToggleGroup
    -MenuItem loadListsMenuItem
    -MenuItem saveSelectedListsMenuItem
    -ToggleGroup sortOptionToggleGroup
    -RadioMenuItem viewAllItemsRadioMenuItem
    -RadioMenuItem viewCompletedItemsOnlyRadioMenuItem
    -RadioMenuItem viewIncompleteItemsOnlyRadioMenuItem
    -RadioMenuItem sortByDateAddedRadioMenuItem
    -RadioMenuItem sortByDueDateRadioMenuItem
    -VBox listContainerVBox

    +void addNewItemButtonPressed()

    +void highlightEmptyDescriptions()
    +void saveSelectedListsMenuItemSelected()

    +void loadListsMenuItemSelected()
    +void clearListMenuItemSelected()
    -void clearGeneratedControls()

    -GridPane todoListToGridPane()
    -boolean allControlsPresent(ListItem item)
    -void resetTodoListToGridPane()
    -void addCheckBox(ListItem item)
    -void addTextField(ListItem item)
    -void addDatePicker(ListItem item)
    -void addRemoveButton(ListItem item)

    -void applyTextFieldErrorBorder(TextField tf)
    -void removeTextFieldErrorBorder(TextField tf)
    -void updateDisplayedList()

    +void initialize()
    -void initWithEmptyList()
    -void initToggleGroupChangeListeners()
    -void initRadioMenuItemEnums()
    -void initAlertBoxes()
}

enum listItemFilterOption
{
    ALL
    INCOMPLETE_ONLY
    COMPLETE_ONLY
}

enum sortListOption
{
    BY_DATE_ADDED
    BY_DUE_DATE
}

+class ListItem
{
    -boolean itemCompleted
    -String description
    -LocalDate dueDate

    +ListItem()
    +ListItem(boolean itemCompleted, String description, LocalDate dueDate)
    +ListItem(boolean itemCompleted, String description)

    +void setItemCompleted(boolean itemCompleted)
    +boolean isItemCompleted()
    
    +void setDescription(String description)
    +String getDescription()
    
    +void setDueDate(LocalDate dueDate)
    +LocalDate getDueDate()
    
    +String toString()
}

+class TodoList
{
    -final ArrayList<ListItem> listItemsData;
    -final ObservableList<ListItem> listItems;
    -final SimpleIntegerProperty listSize
    
    +TodoList()
    +TodoList(List<ListItem> listItemsData)
    +void addItemToList()
    +SimpleIntegerProperty getListSize()
    +List<ListItem> getAllListItems()
    +List<ListItem> getCompletedItems()
    +List<ListItem> getIncompleteItems()
    +static void sortTodoList(List<ListItem> items)
    +boolean validateAllItemDescriptionsNonEmpty()
    +void clear()
    +String toString()
}

+class ApplicationStateSerializer
{
    +void saveListToFile(TodoList list, File file)

    +TodoList loadListFromFile(File file)

    -void loadListItems(Scanner fromFile, List<ListItem> buffer)
    
    -ListItem convertStringToListItem(String line)
    
    -boolean match(String input, String regex)
}

TodoListApplicationController *-- ApplicationStateSerializer
ListItem --* TodoList
TodoListApplicationController *-- TodoList

TodoListApplicationController *-- listItemFilterOption
TodoListApplicationController *-- sortListOption

@enduml